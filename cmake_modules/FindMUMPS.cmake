find_path (MUMPS_DIR include/mumps_compat.h HINTS ENV MUMPS_DIR DOC "Mumps Directory")
if(EXISTS ${MUMPS_DIR}/include/mumps_compat.h)
    set(MUMPS_FOUND YES)
    set(MUMPS_INCLUDES ${MUMPS_DIR})
    find_path (MUMPS_INCLUDE_DIR mumps_compat.h HINTS "${MUMPS_DIR}" PATH_SUFFIXES include NO_DEFAULT_PATH)
    list(APPEND MUMPS_INCLUDES ${MUMPS_INCLUDE_DIR})
    find_library(LIB_MUMPS_COMMON mumps_common PATHS ${MUMPS_DIR}/lib)
    find_library(LIB_MUMPS_D dmumps PATHS ${MUMPS_DIR}/lib)
    find_library(LIB_MUMPS_Z zmumps PATHS ${MUMPS_DIR}/lib)
    find_library(LIB_MUMPS_PORD pord PATHS ${MUMPS_DIR}/lib)
    find_library(LIB_METIS metis)
    set(LIB_GFORTRAN gfortran)
    find_library(LIB_MPIF90 mpif90)
    set(MUMPS_LIBRARIES "${LIB_MUMPS_D};${LIB_MUMPS_Z};${LIB_MUMPS_COMMON};${LIB_MUMPS_PORD};${LIB_METIS};${LIB_GFORTRAN};${LIB_MPIF90}")
    if(NOT USE_MKL)
#         find_library(LIB_BLACS blacs)
        find_library(LIB_SCALAPACK scalapack-openmpi)
        set(MUMPS_LIBRARIES "${MUMPS_LIBRARIES};${LIB_SCALAPACK}")
    endif(NOT USE_MKL)
else(EXISTS ${MUMPS_DIR}/include/mumps_compat.h)
    set(MUMPS_FOUND NO)
endif(EXISTS ${MUMPS_DIR}/include/mumps_compat.h)
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(MUMPS DEFAULT_MSG MUMPS_LIBRARIES MUMPS_INCLUDES)
